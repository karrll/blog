[{"content":"\n\n\nCentOS7配置防火墙的两种方法：\n\n\n 一、使用xml配置文件的方式配置；\n 方法一\n\n    cp /usr/lib/firewalld/services/http.xml /etc/firewalld/services/\n     firewall-cmd --reload\n\n\n\n二、使用命令的方式配置；\n 方法二\n\n      ##Add\n     firewall-cmd --permanent --zone=public --add-port=80/tcp\n     ##Remove\n     firewall-cmd --permanent --zone=public --remove-port=80/tcp\n     ##Reload\n     firewall-cmd --reload\n\n其中，方法二的配置方式是间接修改/etc/firewalld/zones/public.xml文件，方案一也需要在public.xml里面新增，否则http的防火墙规则不会生效，而且两种配置方式都需要重新载入防火墙。\n\n 附：\n 查看防火墙状态\n`systemctl status firewalld.service`\n启动防火墙\n`systemctl start firewalld.service`\n关闭防火墙\n`systemctl stop firewalld.service`\n重新启动防火墙\n","cover":"https://ws1.sinaimg.cn/large/636f37eagy1fegerwhykvj20d203yt9l.jpg","link":"centos7防火墙配置.html","preview":"\u003cp\u003eCentOS7使用的是Linux Kernel 3.10.0的内核版本，新版的Kernel内核已经有了防火墙netfilter，并且firewalld的使用效能更高，稳定性更好。\u003c/p\u003e\n","title":"centos7防火墙配置"},{"content":"\n\nVPS 账号是我们日常管理VPS的主要登入方式，尤其是Root账号，对Linux系统安全至关重要。以前好多站长喜欢用Putty中文版，这实际是别人修改官方Putty汉化而来，这些软件被植入了后门，导致好几个有名的站点信息泄露，损失惨重。\n\n如何知道自己的VPS账号正在遭受坏人的扫描和暴力破解呢？简单的方法就是查看日志：cat /var/log/auth.log。如何来增强VPS 账号的安全性呢？除了养成使用正规软件的好习惯外，还要从VPS本身来加强VPS 账号的安全性。\n\n默认的SSH端口都是22，通过修改自己的VPS的端口先为扫描者增加一道端口门槛，VPS默认的账号是Root，如果我们禁用了Root，那么要攻破账号又得先暴力猜测VPS的账号，难度又增加几分。如果还不放心，我们可以直接禁用密码登录验证VPS的方式，改用密钥登录，这样安全系数是相当高了。\n\nLinux还有一个自动统计VPS登录错误工具：Denyhosts，一旦登录VPS账号错误次数超过了Denyhosts安全设置，Denyhosts就会将该IP记录下来，同时将其放入黑名单当中，禁止该IP在某一段时间内继续访问VPS，通过Denyhosts可以实现自动封锁恶意IP。\n\nVPS主机和网站安全优化是一个持久的问题，没有一劳永逸的“安全设置”，道高一尺，魔高一丈，我们只有不断地发现问题，才能最大限度地保护自己网站和VPS安全\n\n\n----------\n\n\n### **一、增强VPS 账号安全方法一：修改SSH登录端口**\n\n1、用下面命令进入配置文件  \n \u003evi /etc/ssh/sshd_config\n \n2、找到#port 22，将前面的#去掉，然后修改 port 123(自己设定）。\n\n3、然后重启ssh服务  \n\u003e/etc/init.d/ssh restart\n  \n###**二、增强VPS账号安全方法二：使用密钥登录SSH**\n\n 1、SSH登录方式有账号+密码和密钥两种形式，为了阻止暴力破解VPS的账号和密码，我们可以放弃密码验证的方式，改用密钥文件验证。\n\n 2、执行以下命令在VPS上生成密钥文件。  \n      \u003essh-keygen -t rsa\n\n 3、生成密钥时会询问你密钥保存的位置，默认即可，还有你可以为你的密钥还设置一个密码，默认为空。\n![](https://ws1.sinaimg.cn/large/636f37eagy1fega4df05cg20dw06ojre.gif)  \n\n4、密钥生成后，进入密钥存放的目录中，执行以下命令，将公钥生成一个新的文件。 \n\n`cat id_rsa.pub \u003e\u003e authorized_keys`\n\n![](https://ws1.sinaimg.cn/large/636f37eagy1fegbk83lxsg20dw06oaa4.gif)\n\n5、将id-rsa这个私钥文件下载到本地，打开PuTTYGen软件，执行Conversions-\u003eImport Key，导入这个私钥文件。 \n\n![](https://ws1.sinaimg.cn/large/636f37eagy1fegbplm69xg20dw06oweg.gif)\n\n6、Putty使用密钥登录SSH方法：如果你要使用Putty，在PuTTYGen中选择Save private key，这时会在本地生成一个PPK文件。 \n\n![](https://ws1.sinaimg.cn/large/636f37eagy1fegbq5xd6cg20dw06oaa5.gif)\n\n7、然后在Putty中填入服务器名，在SSH授权方式中选择密钥，导入刚刚保存的PPK文件。 \n\n![](https://ws1.sinaimg.cn/large/636f37eagy1fegbt71zcfg20dw06ojrm.gif)\n\n8、使用Xshell通过密钥登录VPS方法：如果要使用Xshell，请在PuTTYGen的Conversions中选择Export Open#SSH Key，设置一个名称保存。\n\n![](https://ws1.sinaimg.cn/large/636f37eagy1fegbu0fc2rg20dw06o74h.gif)\n\n9、然后启用Xshell，填入服务器IP，在用户身份验证中选择“Public Key”，然后浏览导入刚刚你保存的Key文件。 \n\n![](https://ws1.sinaimg.cn/large/636f37ealy1fegbun2pp9g20dw06o0st.gif)\n\n10、导入了Key后，你就可以直接打开登录VPS了，不需要输入密码，即可进入VPS。 \n\n![](https://ws1.sinaimg.cn/large/636f37ealy1fegbv5gsckg20dw06ot8s.gif)\n\n11、有了密钥登录VPS，我们就可以禁止用密码登录这种验证方式了，还是编辑配置：vim /etc/ssh/sshd_config，添加一行：PasswordAuthentication no，如果有了这一行，请把yes改成no，保存，重启SSH服务，生效。\n\n![](https://ws1.sinaimg.cn/large/636f37ealy1fegbw1lotog20dw06oglj.gif)\n\n\n### **三、增强VPS 账号安全方法三：禁用Root账号**\n\n1、如果你已经设置SSH密钥登录的方式，就可以禁用Root账号了，或者你可以新建一个VPS账号。执行以下命令：\n\u003euseradd freehao123 #添加用户名\npasswd freehao123 #为freehao123用户名设置密码\n\n![](https://ws1.sinaimg.cn/large/636f37eagy1fegbzofi61g20dw06ojr8.gif)\n\n2、然后编辑进入配置：vim /etc/ssh/sshd_config，找到PermitRootLogin yes，然后后面的Yes改no，如果没有这一行命令，直接将：PermitRootLogin no 加进去。 \n\n![](https://ws1.sinaimg.cn/large/636f37eagy1fegc0aiss6g20dw06odfu.gif)\n\n3、保存后，重启SSH服务，生效。 \n\n\n### **四、增强VPS 账号安全方法四：Denyhosts防暴力攻击**\n1、Linux各平台现在基本上都可以直接安装Denyhosts了，执行以下命令：\n\u003eDebian/Ubuntu：\nsudo apt-get install denyhosts\n \u003cbr\u003eRedHat/CentOS\nyum install denyhosts\n \u003cbr\u003eArchlinux\nyaourt denyhosts\n \u003cbr\u003eGentoo\nemerge -av denyhosts  \n\n2、安装好了Denyhosts，默认的配置基本上就可以防御一定的暴力攻击了，/etc/hosts.deny 文件里保存了被屏蔽的记录。\n\n![](https://ws1.sinaimg.cn/large/636f37eagy1fegc8reqqkg20dw06o0sq.gif)\n\n3、如果你要自定义Denyhosts的相关配置，执行：vim /etc/denyhosts.conf，以下是相关参数的说明：\n\n\u003eSECURE_LOG = /var/log/auth.log #ssh 日志文件，它是根据这个文件来判断的。\nHOSTS_DENY = /etc/hosts.deny #控制用户登陆的文件\nPURGE_DENY = #过多久后清除已经禁止的，空表示永远不解禁\nBLOCK_SERVICE = sshd #禁止的服务名，如还要添加其他服务，只需添加逗号跟上相应的服务即可\nDENY_THRESHOLD_INVALID = 5 #允许无效用户失败的次数\nDENY_THRESHOLD_VALID = 10 #允许普通用户登陆失败的次数\nDENY_THRESHOLD_ROOT = 1 #允许root登陆失败的次数\nDENY_THRESHOLD_RESTRICTED = 1\nWORK_DIR = /var/lib/denyhosts #运行目录\nSUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS=YES\nHOSTNAME_LOOKUP=YES #是否进行域名反解析\nLOCK_FILE = /var/run/denyhosts.pid #程序的进程ID\nADMIN_EMAIL = root@localhost #管理员邮件地址,它会给管理员发邮件\nSMTP_HOST = localhost\nSMTP_PORT = 25\nSMTP_FROM = DenyHosts \nSMTP_SUBJECT = DenyHosts Report\nAGE_RESET_VALID=5d #用户的登录失败计数会在多久以后重置为0，(h表示小时，d表示天，m表示月，w表示周，y表示年)\nAGE_RESET_ROOT=25d\nAGE_RESET_RESTRICTED=25d\nAGE_RESET_INVALID=10d\nRESET_ON_SUCCESS = yes #如果一个ip登陆成功后，失败的登陆计数是否重置为0\n\n### **五、增强VPS 账号小结**\n\n1、上面讲到了四个方法来增强VPS 账号的安全性，那么如何得知自己的VPS曾经或正在遭受账号暴力破解登录呢？执行以下命令，查询出来的结果中包含了“ip地址=数量”就是攻击者信息。\n\n`cat /var/log/secure|awk '/Failed/{print $(NF-3)}'|sort|uniq -c|awk '{print $2\"=\"$1;}'`\n\n![](https://ws1.sinaimg.cn/large/636f37eagy1fegcbqe1kyg20dw06oa9x.gif)\n\n2、目前在Putty官网上没有看到中文版本的Putty，所以网上流行的一些汉化版本的Putty很有可能被植入了后门，大家在使用时一定要特别留心。Xshell官网直接提供了多国语言，包括中文在内。\n\n文章出自：[免费资源部落](https://www.freehao123.com/) 版权所有","cover":"https://ws1.sinaimg.cn/large/636f37eagy1fegcy7qyffj20fa03mq32.jpg","link":"增强vps 安全.html","preview":"\u003cp\u003eVPS 账号是我们日常管理VPS的主要登入方式，尤其是Root账号，对Linux系统安全至关重要。以前好多站长喜欢用Putty中文版，这实际是别人修改官方Putty汉化而来，这些软件被植入了后门，导致好几个有名的站点信息泄露，损失惨重。\u003c/p\u003e\n","title":"增强VPS 安全:改端口,禁用Root,密钥登录,Denyhosts防暴力攻击"},{"content":"\n\n## 纸小墨简介\n\n纸小墨（InkPaper）是一个GO语言编写的开源静态博客构建工具，可以快速搭建博客网站。它无依赖跨平台，配置简单构建快速，注重简洁易用与更优雅的排版。\n\n![纸小墨 - 简洁的静态博客构建工具](/images/example.png)\n\n### 开始上手\n\n- 下载并解压 [Ink](http://www.chole.io/)，运行命令 `ink preview`\n\n  \u003e 注意：Linux/macOS下，使用 `./ink preview`\n\n- 使用浏览器访问 `http://localhost:8000` 预览。\n\n### 特性介绍\n- YAML格式的配置\n- Markdown格式的文章\n- 无依赖跨平台\n- 超快的构建速度\n- 不断改善的主题与排版\n- 多文章作者支持\n- 归档与标签自动生成\n- 保存时实时预览页面\n- 离线的全文关键字搜索\n\n### 配置网站\n编辑`config.yml`，使用如下格式：\n\n``` yaml\nsite:\n    title: 网站标题\n    subtitle: 网站子标题\n    limit: 每页可显示的文章数目\n    theme: 网站主题目录\n    comment: 评论插件变量(默认为Disqus账户名)\n    root: 网站根路径 #可选\n    lang: 网站语言 #支持en, zh, ru, ja，可在theme/config.yml配置\n    url: 网站链接 #用于RSS生成\n    link: 文章链接形式 #默认为{title}.html，支持{year},{month},{day},{title}变量\n\nauthors:\n    作者ID:\n        name: 作者名称\n        intro: 作者简介\n        avatar: 作者头像路径\n\nbuild:\n    output: 构建输出目录 #可选, 默认为 \"public\"\n    port: 预览端口\n    copy:\n        - 构建时将会复制的目录/文件\n    publish: |\n        ink publish 命令将会执行的脚本\n```\n\n### 创建文章\n在`source`目录中建立任意`.md`文件（可置于子文件夹），使用如下格式：\n\n``` yaml\ntitle: 文章标题\ndate: 年-月-日 时:分:秒 #创建时间，可加时区如\" +0800\"\nupdate: 年-月-日 时:分:秒 #更新时间，可选，可加时区如\" +0800\"\nauthor: 作者ID\ncover: 题图链接 #可选\ndraft: false #草稿，可选\ntop: false #置顶文章，可选\npreview: 文章预览，也可在正文中使用\u003c!--more--\u003e分割 #可选\ntags: #可选\n    - 标签1\n    - 标签2\ntype: post #指定类型为文章(post)或页面(page)，可选\nhide: false #隐藏文章，只可通过链接访问，可选\n\n---\n\nMarkdown格式的正文\n```\n\n### 发布博客\n- 在博客目录下运行`ink publish`命令自动构建博客并发布。\n- 或运行`ink build`命令将生成的`public`目录下的内容手动部署。\n\n\u003e Tips: 在使用`ink preview`命令时，编辑保存文件后，博客会自动重新构建并刷新浏览器页面。\n\n## 定制支持\n\n### 修改主题\n\n默认主题在`theme`目录下，修改源代码后在该目录下运行`npm install`与`webpack`重新构建。\n\n页面包含`page.html`（文章列表）及`article.html`（文章）等，所有页面均支持[GO语言HTML模板](http://golang.org/pkg/html/template/)语法，可引用变量。\n\n### 添加页面\n\n在`source`目录下创建的任意`.html`文件将被复制，这些文件中可引用`config.yml`中site字段下的所有变量。\n\n### 博客迁移(Beta)\n\n纸小墨提供简单的Jeklly/Hexo博客文章格式转换，使用命令：\n``` shell\nink convert /path/_posts\n```\n\n### 源码编译\n\n本地运行\n\n1. 配置[GO](http://golang.org/doc/install)语言环境。\n2. 运行命令`go get github.com/InkProject/ink`，编译并获取ink。\n3. 运行命令`ink preview $GOPATH/src/github.com/InkProject/ink/template`，预览博客。\n\nDocker构建（示例）\n\n1. Clone源码 `git clone git@github.com:InkProject/ink.git`。\n2. 源码目录下构建镜像`docker build -t ink .`。\n3. 运行容器`docker run -p 8000:80 ink`。\n\n## 三方主题\n\n- Pure: [https://github.com/Xdatk/ink-pure](https://github.com/Xdatk/ink-pure)\n- Werttin: [https://github.com/Skimige/ink_Werttin](https://github.com/Skimige/ink_Werttin)\n\n## 反馈贡献\n\n纸小墨基于 [CC Attribution-NonCommercial License 4.0](https://creativecommons.org/licenses/by-nc/4.0/) 协议，目前为止它仍然是个非成熟的开源项目，非常欢迎任何人的任何贡献。如有问题可报告至 [https://github.com/InkProject/ink/issues](https://github.com/InkProject/ink/issues)。\n\n## 更新历史\n\n- [2016-07-11] 修复诸多Issue与合并一些PR。\n- [2015-08-15] 一些Bug修复，新增RSS订阅支持，主题改善。\n- [2015-07-04] 数项Bug修复与主题改善，支持置顶，多语言，子模板。\n- [2015-06-04] 编译更多平台版本，增加标签与存档页。\n- [2015-03-01] Beta版本，基础功能完成。\n\n## 更新计划\n\n- 排版深度优化\n- 纸小墨编辑器\n\n## 正在使用\n\n- [http://www.chole.io/blog/](http://www.chole.io/blog/)\n- [http://blog.hyper.sh/](http://blog.hyper.sh/)\n- [http://wangxu.me/](http://wangxu.me/)\n- [http://whzecomjm.com/](http://whzecomjm.com/)\n- [http://www.shery.me/blog/](http://www.shery.me/blog/)\n","cover":"/images/example.png","link":"ink-blog-tool.html","preview":"\u003cp\u003e纸小墨（InkPaper）是一个GO语言编写的开源静态博客构建工具，可以快速搭建博客网站。它无依赖跨平台，配置简单构建快速，注重简洁易用与更优雅的排版。\u003c/p\u003e\n","title":"简洁的静态博客构建工具 —— 纸小墨（InkPaper）"}]